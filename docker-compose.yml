version: "3.7"

services:
  frontend:
    build: ./frontend
    container_name: frontend
    labels:
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  backend:
    build: ./backend
    container_name: backend
    labels:
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`, `/docs`, `/redoc`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - 8080:8080
    labels:
      - "traefik.http.routers.adminer.rule=Host(`db.domain`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"

  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.http.routers.api.rule=Host(`proxy.domain`)"
      - "traefik.http.services.api.loadbalancer.server.port=8090"

volumes:
  postgres_data:
